-------------------Results for Question 1---------------------
This part is designed to utilise LCL algorithm for finding the optimal solution for 1|prec|g*max problem. 

Applying LCL algorithm:

In iteration 1: 
partial schedule S = [31] with current g = 0

In iteration 2: 
partial schedule S = [1, 31] with current g = 0

In iteration 3: 
partial schedule S = [11, 1, 31] with current g = 0

In iteration 4: 
partial schedule S = [15, 11, 1, 31] with current g = 0

In iteration 5: 
partial schedule S = [2, 15, 11, 1, 31] with current g = 65

In iteration 6: 
partial schedule S = [5, 2, 15, 11, 1, 31] with current g = 44

In iteration 7: 
partial schedule S = [12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 8: 
partial schedule S = [24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 9: 
partial schedule S = [13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 10: 
partial schedule S = [25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 11: 
partial schedule S = [26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 12: 
partial schedule S = [27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 13: 
partial schedule S = [28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 14: 
partial schedule S = [29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 15: 
partial schedule S = [14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 10

In iteration 16: 
partial schedule S = [16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 46

In iteration 17: 
partial schedule S = [17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 18: 
partial schedule S = [6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 19: 
partial schedule S = [18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 20: 
partial schedule S = [7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 21: 
partial schedule S = [19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 22: 
partial schedule S = [21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 23: 
partial schedule S = [8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 24: 
partial schedule S = [20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 25: 
partial schedule S = [22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 26: 
partial schedule S = [9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 27: 
partial schedule S = [23, 9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 28: 
partial schedule S = [3, 23, 9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 29: 
partial schedule S = [10, 3, 23, 9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 30: 
partial schedule S = [4, 10, 3, 23, 9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0

In iteration 31: 
final schedule S = [30, 4, 10, 3, 23, 9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31] with current g = 0


The optimal schedule for 1|prec|g*max problem is:
S = [30, 4, 10, 3, 23, 9, 22, 20, 8, 21, 19, 7, 18, 6, 17, 16, 14, 29, 28, 27, 26, 25, 13, 24, 12, 5, 2, 15, 11, 1, 31]
where g*max = 65


-------------------Results for Question 2---------------------
This part is designed to use tabu search for finding the optimal solution for 1|prec|sum_Tj problem. 

Tabu Search for L=20, K=1000, gamma=10:

Applying Tabu Search:

The initial solution S = [30, 29, 23, 10, 9, 14, 13, 12, 4, 20, 22, 3, 27, 28, 8, 7, 19, 21, 26, 18, 25, 17, 15, 6, 24, 16, 5, 11, 2, 1, 31] has a total tardiness of 341
Improved solution found with g_best = 335, swap pair (2, 28) added to tabu list (current k = 10)
Improved solution found with g_best = 333, swap pair (20, 26) added to tabu list (current k = 15)
Improved solution found with g_best = 323, swap pair (17, 25) added to tabu list (current k = 16)
Improved solution found with g_best = 305, swap pair (5, 24) added to tabu list (current k = 19)
Improved solution found with g_best = 300, swap pair (15, 23) added to tabu list (current k = 20)
Improved solution found with g_best = 290, swap pair (5, 25) added to tabu list (current k = 38)
Improved solution found with g_best = 272, swap pair (15, 24) added to tabu list (current k = 39)
Improved solution found with g_best = 267, swap pair (2, 8) added to tabu list (current k = 47)
Improved solution found with g_best = 265, swap pair (5, 26) added to tabu list (current k = 53)
Improved solution found with g_best = 255, swap pair (15, 25) added to tabu list (current k = 54)
Improved solution found with g_best = 250, swap pair (2, 9) added to tabu list (current k = 62)
Improved solution found with g_best = 244, swap pair (6, 20) added to tabu list (current k = 67)
Improved solution found with g_best = 238, swap pair (6, 17) added to tabu list (current k = 68)
Improved solution found with g_best = 236, swap pair (15, 26) added to tabu list (current k = 71)
Improved solution found with g_best = 234, swap pair (2, 11) added to tabu list (current k = 76)
Improved solution found with g_best = 232, swap pair (5, 11) added to tabu list (current k = 89)
Improved solution found with g_best = 230, swap pair (11, 15) added to tabu list (current k = 90)
Improved solution found with g_best = 229, swap pair (11, 23) added to tabu list (current k = 95)
Improved solution found with g_best = 226, swap pair (2, 12) added to tabu list (current k = 99)
Improved solution found with g_best = 223, swap pair (5, 12) added to tabu list (current k = 112)
Improved solution found with g_best = 220, swap pair (12, 15) added to tabu list (current k = 113)
Improved solution found with g_best = 217, swap pair (2, 13) added to tabu list (current k = 122)
Improved solution found with g_best = 212, swap pair (5, 16) added to tabu list (current k = 344)
Improved solution found with g_best = 209, swap pair (1, 14) added to tabu list (current k = 346)
Improved solution found with g_best = 207, swap pair (2, 20) added to tabu list (current k = 352)
Improved solution found with g_best = 206, swap pair (2, 21) added to tabu list (current k = 365)
Improved solution found with g_best = 203, swap pair (2, 28) added to tabu list (current k = 436)
Improved solution found with g_best = 202, swap pair (20, 27) added to tabu list (current k = 445)
Improved solution found with g_best = 199, swap pair (17, 27) added to tabu list (current k = 449)
Improved solution found with g_best = 196, swap pair (15, 27) added to tabu list (current k = 451)

Terminated search at k = 1000.
Best solution found: S = [30, 4, 23, 3, 22, 10, 14, 13, 9, 8, 7, 29, 6, 21, 27, 20, 19, 18, 17, 16, 28, 26, 25, 15, 11, 24, 12, 5, 2, 1, 31]
Total Tardiness of 196